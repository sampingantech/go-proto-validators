// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: examples/password.proto

package examples

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/sampingantech/go-proto-validators"
	regexp "regexp"
	github_com_sampingantech_go_proto_validators "github.com/sampingantech/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_PasswordMsg_PasswordUpper = regexp.MustCompile("[A-Z]")
var _regex_PasswordMsg_PasswordLower = regexp.MustCompile("[a-z]")
var _regex_PasswordMsg_PasswordNumber = regexp.MustCompile("[0-9]")
var _regex_PasswordMsg_PasswordSpecial = regexp.MustCompile("[^0-9A-Za-z_]")

func (this *PasswordMsg) Validate(_ bool) error {
	multiError := github_com_sampingantech_go_proto_validators.NewMultiError()
	var _regex_PasswordMsg_PasswordMatch = 0
	if _regex_PasswordMsg_PasswordUpper.MatchString(this.Password) {
		_regex_PasswordMsg_PasswordMatch++
	}
	if _regex_PasswordMsg_PasswordLower.MatchString(this.Password) {
		_regex_PasswordMsg_PasswordMatch++
	}
	if _regex_PasswordMsg_PasswordNumber.MatchString(this.Password) {
		_regex_PasswordMsg_PasswordMatch++
	}
	if _regex_PasswordMsg_PasswordSpecial.MatchString(this.Password) {
		_regex_PasswordMsg_PasswordMatch++
	}
	if _regex_PasswordMsg_PasswordMatch < 3 || len(this.Password) < 8 {
		multiError.Append("Password", github_com_sampingantech_go_proto_validators.FieldError("BAD_REQ_PASSWORD", fmt.Errorf(`%v Invalid Password`, this.Password)))
	}
	if !multiError.HasError() {
		return nil
	}
	return multiError.RPCError()
}
